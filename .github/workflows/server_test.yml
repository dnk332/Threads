name: Run unit tests

on:
  push:
    branches: ["main"]
    paths:
      - "Server/**"
  pull_request:
    branches: ["main"]
    paths:
      - "Server/**"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.22.x"]
    services:
      postgres:
        image: postgres:16.2
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: threadsapp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make
          cd Server
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.1/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/
          which migrate
      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 5
          done
      - name: Set up app.env with secrets
        run: echo "${{ secrets.APP_ENV_CONTENT }}" > Server/app.env
      - name: Verify app.env contents
        run: |
          cat Server/app.env  # Check if app.env is correctly populated
      - name: Run migrations
        run: |
          cd Server
          make migrateup
      - name: Debug environment
        run: |
          echo "Current directory: $(pwd)"
          echo "Contents of Server directory:"
          ls -l Server/
          echo "Environment variables:"
          env
      - name: Test
        run: |
          cd Server
          make test
env:
  APP_ENV_CONTENT: ${{ secrets.APP_ENV_CONTENT }}